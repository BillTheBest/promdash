angular.module("Prometheus.directives").directive('expression', ["$timeout", "MetricNamesQuerier", function($timeout, MetricNamesQuerier) {
  return {
    restrict: "E",
    scope: {
      axes: "=",
      servers: "=",
      serversById: "=",
      legendFormatStrings: "=",
      expr: "=",
      index: "="
    },
    link: function(scope, element, attrs) {
      var el = element[0].querySelector("[ng-model='expr.expression']");
      var server = scope.serversById[scope.expr.server_id];

      // Drastically improves performance to bind to new variable, and then
      // when a new expression is chosen update scope.expr.expression only once.
      scope.expression = scope.expr.expression;
      scope.setExpression = function(newExpr) {
        scope.expr.expression = newExpr;
      };

      scope.MetricNamesQuerier = MetricNamesQuerier;
      MetricNamesQuerier(scope.expr.server_id, server.url, scope);

      scope.appendToExpression = function(expr, metricName) {
        var lastCursorPosition = el.selectionStart;
        expr.expression = insertSelection(metricName, el);

        $timeout(function() {
          el.focus();
          el.setSelectionRange(lastCursorPosition, lastCursorPosition + metricName.length)
        }, 0);
      };

      function insertSelection(metricName, el) {
        var val = el.value;
        return val.slice(0, el.selectionStart) + metricName + val.slice(el.selectionEnd, val.length);
      }

      scope.removeExpression = function() {
        scope.$emit('removeExpression', scope.index);
      };
    },
    templateUrl: "<%= asset_path('expression_template.html') %>"
  };
}]);
